#!/bin/bash

Compound=Ethane
Model=LJtoMie_basis

#Specify the path location, note do not include a space at the end of the line

scripts_path=~/Elliott
input_path=~/"$Compound"/Gromacs/Tabulated
output_path=~/"$Compound"/Gromacs/"$Model"

#MolWt=30.0698

opt_method='leapfrog'
opt_prop1='U'
#opt_prop2='Psat'

eps_range_low=(0. 0.1 0.1 0.1 0.1 0.1)
eps_range_high=(0.25 0.2 0.1 0.1 0.1 0.1)
#eps_range_low=(0.1 0.1 0.1 0.1 0.1 0.1)
#eps_range_high=(0.1 0.1 0.1 0.1 0.1 0.1)
sig_range=(0.02 0.02 0.02 0.02 0.02 0.02)
lam_low=13
lam_high=18

TOL_eps=0.1
TOL_sig=0.0003
TOL_lam=0.1
TOL_MBAR=0.001

iRef=2

eps_guess=120.701324415   # (K)
sig_guess=0.379231092422 # (nm)
lam_guess=16.0

bond_length=0.154 #[nm]

conv_overall=0

max_iterations=4

while [ "$conv_overall" -lt 1 ] && [ "$iRef" -lt "$max_iterations" ] #Checks to see if the loop has converged for epsilon
do

cd "$output_path" || exit

if [ $iRef -ge 2 ] #If you have already run (i.e. just rerunning the optimization)
then

#### Start the mdrun simulations for the initial epsilon and sigma values

echo Run ITIC for Epsilon = "$eps_guess" sigma = "$sig_guess" lambda = "$lam_guess"
sleep 2s

####

mkdir ref"$iRef"
cd ref"$iRef" || exit

#Create files with force field parameters

python "$scripts_path"/create_tab.py --lam "$lam_guess" --epsilon "$eps_guess" --sigma "$sig_guess"

C6_guess=$(<C6_it)
Clam_guess=$(<Clam_it)

echo "$eps_guess" "$sig_guess" "$lam_guess" > eps_sig_lam_ref
echo "$eps_guess" > eps_guess
echo "$bond_length" > bond_length

cp "$input_path"/ethane_temp.top ethane.top 
cp "$input_path"/ethane.gro ethane.gro 
sed -i -e s/some_C6/"$C6_guess"/ ethane.top
sed -i -e s/some_Clam/"$Clam_guess"/ ethane.top
sed -i -e s/some_bond/"$bond_length"/g ethane.top

cp "$scripts_path"/EthaneRunITIC_all_tabulated EthaneRunITIC_all

sed -i -e s/some_compound_top/"${Compound}"/ EthaneRunITIC_all
sed -i -e s/some_model_top/"${Model}"/ EthaneRunITIC_all
sed -i -e s/some_iRef_top/"${iRef}"/ EthaneRunITIC_all
sed -i -e s@some_scripts_path_top@"$scripts_path"@ EthaneRunITIC_all
sed -i -e s@some_input_path_top@"$input_path"@ EthaneRunITIC_all
sed -i -e s@some_output_path_top@"$output_path"@ EthaneRunITIC_all

./EthaneRunITIC_all


fi

cd "$output_path"/ref"$iRef" || exit # Must be in correct directory for python script and file generation

echo "Eps (kJ/mol)" > eps_all
echo "Eps (kJ/mol)" "Sigma (nm)" "Lambda" > eps_sig_lam_all
echo "Objective" > F_all
echo "Objective" > F_ITIC_all
cp F_ITIC_all SSE_rhoL_all
cp F_ITIC_all SSE_rhov_all
cp F_ITIC_all SSE_Psat_all
cp F_ITIC_all SSE_U_all
cp F_ITIC_all SSE_P_all
cp F_ITIC_all SSE_Z_all
echo $TOL_eps > TOL_eps
echo $TOL_sig > TOL_sig
echo $TOL_lam > TOL_lam
echo $TOL_MBAR > TOL_MBAR 

echo "${eps_range_low[iRef]}" > eps_range_low
echo "${eps_range_high[iRef]}" > eps_range_high
echo "$eps_guess" > eps_guess

echo "Sigma (nm)" > sig_all
echo "$sig_guess" > sig_guess
echo "${sig_range[iRef]}" > sig_range

echo "$lam_low" > lam_low
echo "$lam_high" > lam_high
echo "$lam_guess" > lam_guess

echo "$iRef" > iRef #Testing out to see if I can copy the reference inside this directory instead

cp "$scripts_path"/EthaneRerunITIC_subprocess_tabulated EthaneRerunITIC_subprocess

sed -i -e s/some_compound_top/"${Compound}"/ EthaneRerunITIC_subprocess
sed -i -e s/some_model_top/"${Model}"/ EthaneRerunITIC_subprocess
sed -i -e s/some_iRef_top/"${iRef}"/ EthaneRerunITIC_subprocess
sed -i -e s@some_scripts_path_top@"$scripts_path"@ EthaneRerunITIC_subprocess
sed -i -e s@some_input_path_top@"$input_path"@ EthaneRerunITIC_subprocess
sed -i -e s@some_output_path_top@"$output_path"@ EthaneRerunITIC_subprocess

cd "$output_path"/ref"$iRef" || exit #Must cd back to original location for python script

python "$scripts_path"/optimization_Mie_ITIC_multiple_refs.py -opt "$opt_method" -prop "$opt_prop1" -bas -lam
#python "$scripts_path"/optimization_Mie_ITIC.py -opt "$opt_method" -prop "$opt_prop1" "$opt_prop2"
cp eps_sig_lam_all eps_sig_lam_all_ref"$iRef"
python "$scripts_path"/parameter_space_SSE_analysis_Mie.py -opt "$opt_method"
rm eps_sig_lam_all # Move this before paramater_space... after modifying code to look just for iRef

cd "$output_path"/ref"$iRef" || exit #Should still be in the same directory, but just to be safe

#rm ../ref*/Isochore/rho?/T?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg
#rm ../ref*/Isotherm/rho_?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg
#rm Isochore/rho?/T?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg Isochore/rho?/T?/NVT_eq/nvt_eq.trr Isochore/rho?/T?/NVT_eq/NVT_prod/nvt_prod.log
#rm Isotherm/rho_?/NVT_eq/NVT_prod/energy_press_ref*rr*.xvg Isotherm/rho_?/NVT_eq/nvt_eq.trr Isotherm/rho_?/NVT_eq/NVT_prod/nvt_prod.log #Do not delete the production trajectory files since they will be used in subsequent iterations

eps_optimal=$(<eps_optimal)
sig_optimal=$(<sig_optimal)
lam_optimal=$(<lam_optimal)
iRef=$((iRef + 1))
conv_overall=$(<conv_overall)

eps_guess=$eps_optimal
sig_guess=$sig_optimal
lam_guess=$lam_optimal

if [ $lam_high -lt 18 ] #This allows for lambda to progressively inrease until the entire range 13-18 has been covered
then
lam_high=$((lam_high + 1))
lam_low=$((lam_low + 1))
else
lam_low=13
lam_high=18
fi

echo "$eps_guess"
echo "$sig_guess"
echo "$lam_guess"
echo "$conv_overall"



done #for while loop of direct simulations

exit 0

#######

